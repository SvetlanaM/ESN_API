FORMAT: 1A
HOST: https://esn.org/

# ESN API Documentation
ESN API documentation for ESN project. This project is divided
to many phases. This version of the API is for version 01.


# Allowed HTTPs requests:
<pre>
POST     : To create resource
PUT    : Update resource
GET     : Get a resource or list of resources
DELETE  : To delete resource
</pre>

# Description Of Usual Server Responses:
- 200 `OK` - the request was successful (some API calls may return 201 instead).
- 201 `Created` - the request was successful and a resource was created.
- 204 `No Content` - the request was successful but there is no representation to return (i.e. the response is empty).
- 400 `Bad Request` - the request could not be understood or was missing required parameters.
- 401 `Unauthorized` - authentication failed or user doesn't have permissions for requested operation.
- 403 `Forbidden` - access denied.
- 404 `Not Found` - resource was not found.
- 405 `Method Not Allowed` - requested method is not supported for resource.
- 500 `Internal Server Error` - server error


# Authentication
<table>
    <tr>
        <td> Token </td>
        <td> Token/API key </td>
    </tr>
</table>


# Section
Represents city and university details. With one city, user
can choose more universities.

---
**City attributes:**

- id `(Number)` : Unique Identifier.
- name `(String)` : City Name.
- city_image `(URL)` : City Image.
- state `(String)` : City State.
- best_tip_title `(String)` : City Best Offer.
- best_tip_image `(URL)` : City Best Offer Image.
- latitude `(String)` : Latitude Coordinates of the City.
- longtitude `(String)` : Longtitude Coordinates of the City.
- city_desc `(String)` : Description of city. Short one.

---

**University attributes:**

- id `(Number)` : Unique Identifier.
- name `(String)` : University Name.
- section_name `(String)` : ESN section name. For future reference.
- section_desc `(String)` : Description of section.

---

## Section Collection [/sections]
### List all cities and related universities [GET]
This is called when user starts the app for the first time
and when user change settings in the app settings section.

User can choose one city and more universtities.

Based on the GPS is automatically choosen city where is the user.
He can change this city in the app manually.

Cities and universities are ordered alphabetically
from the server side.

+ Request
    + Headers

            Authorization: JWT ABC123

+ Response 200 (application/json)

        [
            {
                "id" : 1,
                "name": "Prague",
                "city_image" : "",
                "state" : "Czech Republic",
                "best_tip_image" : "",
                "best_tip_title" : "Tip: Try Proti Proudu in Prague",
                "longitude": "14.4378005",
                "latitude" : "50.0755381",
                "city_desc" : "",
                "universities": [
                    {
                        "id": 1,
                        "name": "Charles University",
                        "section_name": "IC CUNI",
                        "section_desc": ""
                    }, {
                        "id": 2,
                        "name": "Czech Technical University",
                        "section_name": "ISC CTU in Prague",
                        "section_desc": ""
                    }, {
                        "id": 3,
                        "name": "Czech University of Life Sciences",
                        "section_name": "ESN CULS Prague",
                        "section_desc": ""
                    }, {
                        "id": 4,
                        "name": "University of Chemistry and Technology",
                        "section_name": "ESN UCT Prague",
                        "section_desc": ""
                    }, {
                        "id": 5,
                        "name": "Universiy of Economics",
                        "section_name": "ESN VSE Prague",
                        "section_desc": ""
                    }
                ]
            },
            {
                "id" : 2,
                "name": "Olomouc",
                "city_image" : "",
                "state" : "Czech Republic",
                "best_tip_image" : "",
                "best_tip_title" : "Best coffee shop in Olomouc",
                "longitude": "49.59552",
                "latitude" : "17.25175",
                "city_desc" : "",
                "universities": [
                    {
                        "id": 6,
                        "name": "Palack√Ω University",
                        "section_name": "ESN UP Olomouc",
                        "section_desc": ""
                    }
                ]
            }
        ]

## Subcategory Collection [/subcategories{?category}]
---
Represents subcategory details. One main category contains
more subcategories, where one subcategory can be in more
main categories.

---

**Subcategory attributes:**

- id `(Number)` : Unique Identifier.
- parent_category `(Number)` : parent super category. server side
- name `(String)` : Subcategory Name.
- color `(String)` : Subcategory Color.
- icon `(URL)` : Subcategory Icon.
- order `(Number)` : listing priority. lower = more important. server side


### List all subcategories [GET]

Subcategories and categories are ordered based on the order
from the server side.

We use subcategory color and icon. When there is no icon and
color for the subcategory, you can use category color and icon.
Also you can use category color and icon when data are
grouped on the map.

+ Request
    + Headers

            Authorization: JWT ABC123


+ Parameters
    + category (Number)... id of the selected category.


+ Response 200 (application/json)

        [
                {
                  "id":"1",
                  "parent_category":"1",
                  "name":"University",
                  "color":"#2e3192",
                  "icon":"",
                  "order":"1",
                  "pois" : [1, 2, 3]
                },
                {
                  "id":"2",
                  "parent_category":"1",
                  "name":"Erasmus Student Network",
                  "color":"#00aeef",
                  "icon":"",
                  "order":"2",
                  "pois" : [1, 2, 3]
                },
                {
                  "id":"5",
                  "parent_category":"1",
                  "name":"Canteens",
                  "color":"#f47b20",
                  "icon":"",
                  "order":"3",
                  "pois" : [1, 2, 3]
                },
                {
                  "id":"4",
                  "parent_category":"1",
                  "name":"Faculties",
                  "color":"#ec008c",
                  "icon":"",
                  "order":"4",
                  "pois" : [1, 2, 3]
                },
                {
                  "id":"3",
                  "parent_category":"1",
                  "name":"Dormitories",
                  "color":"#7ac143",
                  "icon":"",
                  "order":"5",
                  "pois" : [1, 2, 3]
                },
                {
                  "id":"16",
                  "parent_category":"2",
                  "name":"Pub & Bars",
                  "color":"#2e3192",
                  "icon":"",
                  "order":"1",
                  "pois" : [1, 2, 3]
                },
                {
                  "id":"8",
                  "parent_category":"2",
                  "name":"Groceries",
                  "color":"#7ac143",
                  "icon":"",
                  "order":"2",
                  "pois" : [1, 2, 3]
                },
                {
                  "id":"9",
                  "parent_category":"2",
                  "name":"Shopping",
                  "color":"#00aeef",
                  "icon":"",
                  "order":"3",
                  "pois" : [1, 2, 3]
                },
                {
                  "id":"6",
                  "parent_category":"2",
                  "name":"Doctors and health care",
                  "color":"#ff0000",
                  "icon":"",
                  "order":"4",
                  "pois" : [1, 2, 3]
                },
                {
                  "id":"7",
                  "parent_category":"2",
                  "name":"Police",
                  "color":"#2e3192",
                  "icon":"",
                  "order":"5",
                  "pois" : [1, 2, 3]
                },
                {
                  "id":"15",
                  "parent_category":"2",
                  "name":"Travel",
                  "color":"#ec008c",
                  "icon":"",
                  "order":"6",
                  "pois" : [1, 2, 3]
                },
                {
                  "id":"14",
                  "parent_category":"2",
                  "name":"Culture",
                  "color":"#f47b20",
                  "icon":"",
                  "order":"7",
                  "pois" : [1, 2, 3]
                },
                {
                  "id":"11",
                  "parent_category":"3",
                  "name":"Clubbing",
                  "color":"#2e3192",
                  "icon":"",
                  "order":"1",
                  "pois" : [1, 2, 3]
                },
                {
                  "id":"10",
                  "parent_category":"3",
                  "name":"Food",
                  "color":"#7ac143",
                  "icon":"",
                  "order":"2",
                  "pois" : [1, 2, 3]
                },
                {
                  "id":"12",
                  "parent_category":"3",
                  "name":"Entertainment",
                  "color":"#f47b20",
                  "icon":"",
                  "order":"3",
                  "pois" : [1, 2, 3]
                },
                {
                  "id":"13",
                  "parent_category":"3",
                  "name":"Accommodation",
                  "color":"#00aeef",
                  "icon":"",
                  "order":"4",
                  "pois" : [1, 2, 3]
                },
                {
                  "id":"17",
                  "parent_category":"4",
                  "name":"Vodafone shops",
                  "color":"#E60000",
                  "icon":"",
                  "order":"1",
                  "pois" : [1, 2, 3]
                },
                {
                  "id":"18",
                  "parent_category":"4",
                  "name":"Charging places",
                  "color":"#f47b20",
                  "icon":"",
                  "order":"2",
                  "pois" : [1, 2, 3]
                }
        ]


## POI Detail Collection [/poi/{id}]
---
Represents Point of Interest details. One POI can be in more subcategories and categories.
This is called when user click on the main category tab or during the first
call of the app, when is dowloaded default category.

**POI attributes:**

- id `(Number)` : Unique Identifier.
- category_path `(String)` : Full Path for the Category.
- full_address `(String)` : POI City.
- name `(String)` : POI Name.
- latitude `(String)` : POI Latitude coordinates.
- longitude `(String)` : POI Longitude coordinates.
- preview_image `(URL)` : POI Preview Image in the List View.
- image_list `(Array[URL])` : POI List of Images for the Slider in the POI Detail.
- content_title `(String)` : POI Title of the Content Section.
- content_body `(String)` : POI Body of the Content Section.
- website_link `(URL)` : POI URL of the partner website.
- subcategory_id `(Array(Number))` : POI Subcategory Identifier.
---

### POI Detail [GET]

POIs are ordered based on the order from the server side.

This call also contains information for the POI detail section.

+ Request
    + Headers

            Authorization: JWT ABC123


+ Parameters
    + id (Number)... id of the POI.

+ Response 200 (application/json)

        
           {
                "id" : 1,
                "category_path" : "Vodafone-Kafe",
                "name" : "Kafe Blue",
                "full_address" : "Riegerova 221/2, 123 00, Olomouc",
                "latitude" : "",
                "longitude" : "",
                "website_link" : "https://www.facebook.com/",
                "preview_image" : "",
                "subcategory_id" : [2, 1],
                "image_list" : [
                    {
                        "id" : 1,
                        "image_url" : "",
                        "order" : 1
                        },
                    {
                        "id" : 2,
                        "image_url" : "",
                        "order" : 2
                    },
                    {
                        "id" : 3,
                        "image_url" : "",
                        "order" : 3
                    }
                ],
                "content" : [
                    {
                        "content_title" : "Otvaracie hodiny",
                        "content_body" : "Od pondelka do piatku"
                    },
                    {
                        "content_title" : "Informacie",
                        "content_body" : "Toto je super miesto"
                    }
                ]
            }
        


## Update Collection [/update_from={datetime}]
---
Sent all updated data as a difference between datetime and the current date.

# States
<table>
    <tr>
        <td> New </td>
        <td> New data created </td>
    </tr>
    <tr>
        <td> Update </td>
        <td> Updated existing data </td>
    </tr>
    <tr>
        <td> Delete </td>
        <td> Deleted existing data </td>
    </tr>
</table>

### Update all data [GET]
+ Request
    + Headers

            Authorization: JWT ABC123


+ Parameters
    + datetime (String) ... Timestamp in unix format: `YYYY-MM-DDTHH:MM:SS`.

+ Response 200 (application/json)

        [
            {   "subcategories" : [
                    {
                        "id" : 1,
                        "name" : "Vodafone",
                        "color" : "#333333",
                        "icon" : "",
                        "state" : "New"
                    },
                    {
                        "id" : 2,
                        "name" : "Discounts",
                        "color" : "#33323",
                        "icon" : "",
                        "state" : "Delete"
                    }
                ]
            },
            {   "categories" : [
                    {
                        "id" : 1,
                        "name" : "Vodafone",
                        "color" : "#333333",
                        "icon" : "",
                        "state" : "Update"
                    }
                ]
            }
        ]



## Environment Collection [/environments]
### Get environment state [GET]
This is called when user starts the app for the first time
and when user change settings in the app settings section.

When is_production is True, in the app you should use
production url links for the other calls. When it is false, you
should use development url links for the other calls.

Represents environment for the api calls. It could be
development or production.

---
**Environment attributes:**

- id `(Number)` : Unique Identifier.
- is_production `(Boolean)` : Production Identifier.

---

+ Request
    + Headers

            Authorization: JWT ABC123


+ Response 200 (application/json)

        [
            {
                "id" : 1,
                "is_production", True
            }
        ]


## Category Collection [/categories{?universities}]
---
Represents category a details.

---

**Category attributes:**

- id `(Number)` : Unique Identifier.
- name `(String)` : Category Name.
- color `(String)` : Category Color.
- icon `(URL)` : Category Icon.
- order `(Number)` : listing priority. lower = more important. server side


### List all categories [GET]

Categories are ordered based on the order
from the server side.

We use category color and icon.
Also you can use category color and icon when data are
grouped on the map.

Koment√°r (martin wpa): toto s√∫ "super"kateg√≥rie, glob√°lne pre v≈°etk√Ωch,
bez ohƒæadu na v√Ωber mesta a univerzity. Parameter je asi teda zbytoƒçn√Ω. 
Subkate√≥rie sa potom radia do t√Ωchto kateg√≥ri√≠ (napr. Doctors and health patr√≠ pod Services.)

+ Request
    + Headers

            Authorization: JWT ABC123

+ Parameters
    + universities (array[int])... array of the selected universities ids.

+ Response 200 (application/json)

        [
            {
                "id": 1,
                "name": "University",
                "icon": "",
                "color": "#2e3192",
                "order": 1
            },
            {
                "id": 2,
                "name": "Services",
                "icon": "",
                "color": "#7ac143",
                "order": 2
            },
            {
                "id": 3,
                "name": "Discounts",
                "icon": "",
                "color": "#ec008c",
                "order": 3
            },
            {
                "id": 4,
                "name": "Vodafone",
                "icon": "",
                "color": "#E60000",
                "order": 4
            }
        ]